[{"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\index.tsx":"1","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\Datos.tsx":"2","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\transfer.tsx":"3","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\Navbar.tsx":"4","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\register.tsx":"5","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\login.tsx":"6","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\SlidebarData.tsx":"7","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\App.tsx":"8","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\http-common.tsx":"9","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\services\\user.service.tsx":"10","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\reportWebVitals.ts":"11","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\notas.tsx":"12","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\home.tsx":"13"},{"size":651,"mtime":1606586677059,"results":"14","hashOfConfig":"15"},{"size":4643,"mtime":1606682108296,"results":"16","hashOfConfig":"15"},{"size":1950,"mtime":1606587176115,"results":"17","hashOfConfig":"15"},{"size":2388,"mtime":1606677755687,"results":"18","hashOfConfig":"15"},{"size":4212,"mtime":1606668373081,"results":"19","hashOfConfig":"15"},{"size":4210,"mtime":1606677874956,"results":"20","hashOfConfig":"15"},{"size":1133,"mtime":1606610733371,"results":"21","hashOfConfig":"15"},{"size":800,"mtime":1606608657416,"results":"22","hashOfConfig":"15"},{"size":116,"mtime":1606684421620,"results":"23","hashOfConfig":"15"},{"size":506,"mtime":1606674530355,"results":"24","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"15"},{"size":1096,"mtime":1606683267957,"results":"26","hashOfConfig":"15"},{"size":491,"mtime":1606651699279,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"4haubk",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\index.tsx",["63","64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["65","66"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\Datos.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\transfer.tsx",["67","68","69","70"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { BlockHttp, TransactionHttp, Mosaic, NetworkCurrencyMosaic } from 'tsjs-xpx-chain-sdk';\r\nimport { TransferTransaction, Deadline, Account, NetworkType, PlainMessage, Address } from 'tsjs-xpx-chain-sdk';\r\n\r\n\r\nexport default class Trans extends Component {\r\n\r\n\r\n    transfer() {\r\n        const privateKey = '34DAB8CDC6040342B3F4336BF9D20399FFA2784DC63BC55000B006EC8B5804D2';\r\n        const transactionHttp = new TransactionHttp('https://bctestnet2.brimstone.xpxsirius.io');\r\n        const blockHttp = new BlockHttp('https://bctestnet2.brimstone.xpxsirius.io');\r\n\r\n        //quien recive\r\n        const recipientAddress = Address.createFromRawAddress('VARHPD-EVNUML-F5EYE2-SXVBON-KRNMWL-XCSRWT-4ZG3');\r\n        //const recipientAddress = Address.createFromRawAddress('VDHJIG-C7R7C7-SGRD4L-3BSFY4-6563D7-B6XQVB-ZTEI');\r\n        //crear transfer\r\n        const transferTransaction = TransferTransaction.create(\r\n            Deadline.create(),\r\n            recipientAddress,\r\n            [NetworkCurrencyMosaic.createRelative(1)],\r\n            //NetworkCurrencyMosaic.createRelative(1)\r\n            PlainMessage.create('Hola React!'),\r\n            NetworkType.TEST_NET\r\n        );\r\n        // hash\r\n        const generationHash = \"56D112C98F7A7E34D1AEDC4BD01BC06CA2276DD546A93E36690B785E82439CA9\";\r\n        // cuenta\r\n        const account = Account.createFromPrivateKey(privateKey, NetworkType.TEST_NET);\r\n        const signedTx = account.sign(transferTransaction, generationHash);\r\n\r\n        //aununciar la transacciÃ³n\r\n        transactionHttp.announce(signedTx).subscribe(\r\n            () => console.log('Texto enviado!'),\r\n            error => console.log(error)\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.transfer}><a>Transfer</a></button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\Navbar.tsx",["71","72"],"import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from '../components/SlidebarData';\r\nimport { SidebarData1 } from '../components/SlidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { LocationDescriptorObject, Location, History } from 'history';\r\n\r\n\r\nfunction Navbar(this: any) {\r\n  let val: boolean;\r\n  let prueba = localStorage.getItem(\"sesion\");\r\n  let sesion = false;\r\n  val = Boolean(prueba); \r\n  sesion = val;\r\n\r\n  let SidebarData2: { cName: string | undefined; path: string | LocationDescriptorObject<unknown> | ((location: Location<unknown>) => History.LocationDescriptor<unknown>); icon: React.ReactNode; title: React.ReactNode; }[] = [];\r\n  const [sidebar, setSidebar] = useState(false);\r\n  \r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  if(sesion == true){\r\n    SidebarData2 = SidebarData;\r\n\r\n  }\r\n  if(sesion == false){\r\n    SidebarData2 = SidebarData1;\r\n\r\n  }\r\n   \r\n  \r\n  \r\n    return (\r\n      <>\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n          <div className='navbar'>\r\n            <Link to='#' className='menu-bars'>\r\n              <FaIcons.FaBars onClick={showSidebar} />\r\n            </Link>\r\n          </div>\r\n          <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n            <ul className='nav-menu-items' onClick={showSidebar}>\r\n              <li className='navbar-toggle'>\r\n                <Link to='#' className='menu-bars'>\r\n                  <AiIcons.AiOutlineClose />\r\n                </Link>\r\n              </li>\r\n              {SidebarData2.map((item: { cName: string | undefined; path: string | LocationDescriptorObject<unknown> | ((location: Location<unknown>) => History.LocationDescriptor<unknown>); icon: React.ReactNode; title: React.ReactNode; }, index: string | number | null | undefined) => {\r\n                return (\r\n                  <li key={index} className={item.cName}>\r\n                    <Link to={item.path}>\r\n                      {item.icon}\r\n                      <span>{item.title}</span>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </nav>\r\n        </IconContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Navbar;\r\n","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\register.tsx",["73","74","75","76","77","78","79","80","81"],"import React, { useState, } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//paginas import App from './../App';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {BrowserRouter as Router,Switch,Route,Link,Redirect, withRouter} from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport default function register() {\r\n    //const [nom, setNom]= useState(\"\");\r\n\r\n    return (\r\n       <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                    <div className=\"card my-5\">                    \r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Registrar</h5>\r\n                               <Form>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Nombres</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Apellidos</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Correo</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"email\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>ContraseÃ±a</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"password\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>DirecciÃ³n</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>                              \r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Pais</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group> \r\n                        \r\n                                <Button variant=\"success\" block size=\"lg\" type=\"submit\">\r\n                                    Registrar                                                                                              \r\n                                </Button>\r\n                                \r\n                            </Form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["82","83"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\login.tsx",["84","85","86","87","88","89","90"],"import React, { useState, } from \"react\";\r\nimport './login.css';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//paginas import App from './../App';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {BrowserRouter as Router,Switch,Route,Link,Redirect, withRouter} from \"react-router-dom\";\r\nimport { Alert, Card } from \"react-bootstrap\";\r\nimport Service from '../services/user.service';\r\n\r\nexport interface user {\r\n    id:number,\r\n    nombres: String,\r\n    apellidos: String,\r\n    correo: String,\r\n    direccion: String,\r\n    pais: String,\r\n    password: String,\r\n    address: String,\r\n    privatekey: String,\r\n    publickey: String\r\n}\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    console.log(email, password);\r\n    datos();\r\n    \r\n\r\n    let history = useHistory();\r\n    \r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n    function handleSubmit(event: { preventDefault: () => void; }) {\r\n        event.preventDefault();\r\n        if(usu.correo == email && usu.password == password){\r\n            localStorage.setItem('usuario', JSON.stringify(usu));\r\n            localStorage.setItem('sesion', 'true');\r\n            ['success'].map((variant, idx) => (\r\n                <Alert key={idx} variant={variant}>\r\n                  {variant} Bienvenido\r\n                </Alert>\r\n              ));\r\n            history.push('/');\r\n        }else{\r\n            console.log('datos incorrectos');\r\n        }\r\n             \r\n    }\r\n    let usu:user;\r\n    function datos (){\r\n        Service.get(\"duvan@gmail.com\").then(res => {\r\n            const data = res.data;\r\n            usu = data;\r\n            console.log(data);\r\n          });     \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                    <div className=\"card my-5\">\r\n                        <Card.Img src=\"Logo.png\" width={250} height={400}/>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Login</h5>\r\n                               <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"                                         \r\n                                        type=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button variant=\"success\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                                    Login                                                                                               \r\n                                </Button>\r\n                                \r\n                            </Form>\r\n                             <br/>\r\n                             <br/>                          \r\n                            <li className=\"centro\">\r\n                                <Link to=\"/register\">Registrarse</Link>\r\n                            </li>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\SlidebarData.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\App.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\http-common.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\services\\user.service.tsx",["91","92"],"import axios from \"axios\";\r\nimport http from \"../http-common\";\r\nimport user from '../pages/login'\r\nclass Service {\r\n  getAll() {\r\n    return http.get(\"/user\");\r\n  }\r\n\r\n  get(id: String) {\r\n    return http.get(`/user/${id}`);\r\n    \r\n  }\r\n\r\n  create(data: Object) {\r\n    return http.post(\"/user/\", data);\r\n  }\r\n\r\n  update(id: String, data: Object) {\r\n    return http.put(`/user/${id}`, data);\r\n  }\r\n\r\n  delete(id: String) {\r\n    return http.delete(`/user/${id}`);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new Service();","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\reportWebVitals.ts",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\notas.tsx",["93"],"import React, { Component } from 'react';\r\n\r\nexport default class notas extends Component {\r\n\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n  }\r\n\r\n  onFileChange(e: any) {\r\n    const file = e.target.files[0];\r\n    console.log(file.name);\r\n    console.log(file.size);\r\n    console.log(file.type);\r\n    var sha256File = require('sha256-file');\r\n    /* let path = file.path;\r\n    sha256File(path);\r\n    // async/streamed (if using callback)\r\n\r\n    sha256File('./path/to/a_file', function (error: any, sum: any) {\r\n      if (error) return console.log(error);\r\n      console.log(sum) \r\n    }) */\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>File upload using form in React</h2>\r\n        <hr />\r\n        <div>\r\n          <form>\r\n            <table>\r\n              <tr>\r\n                <td>Select File :</td>\r\n              </tr>\r\n              <tr>\r\n                <input onChange={this.onFileChange} type=\"file\" />\r\n              </tr>\r\n            </table>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\home.tsx",["94","95"],{"ruleId":"96","severity":1,"message":"97","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":9},{"ruleId":"96","severity":1,"message":"100","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"96","severity":1,"message":"105","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":17},{"ruleId":"96","severity":1,"message":"106","line":4,"column":38,"nodeType":"98","messageId":"99","endLine":4,"endColumn":44},{"ruleId":"96","severity":1,"message":"107","line":14,"column":15,"nodeType":"98","messageId":"99","endLine":14,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":47,"column":49,"nodeType":"110","endLine":47,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":23,"column":13,"nodeType":"113","messageId":"114","endLine":23,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":27,"column":13,"nodeType":"113","messageId":"114","endLine":27,"endColumn":15},{"ruleId":"96","severity":1,"message":"115","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"116","line":5,"column":10,"nodeType":"98","messageId":"99","endLine":5,"endColumn":20},{"ruleId":"96","severity":1,"message":"117","line":7,"column":26,"nodeType":"98","messageId":"99","endLine":7,"endColumn":32},{"ruleId":"96","severity":1,"message":"118","line":7,"column":33,"nodeType":"98","messageId":"99","endLine":7,"endColumn":39},{"ruleId":"96","severity":1,"message":"119","line":7,"column":40,"nodeType":"98","messageId":"99","endLine":7,"endColumn":45},{"ruleId":"96","severity":1,"message":"120","line":7,"column":46,"nodeType":"98","messageId":"99","endLine":7,"endColumn":50},{"ruleId":"96","severity":1,"message":"121","line":7,"column":51,"nodeType":"98","messageId":"99","endLine":7,"endColumn":59},{"ruleId":"96","severity":1,"message":"122","line":7,"column":61,"nodeType":"98","messageId":"99","endLine":7,"endColumn":71},{"ruleId":"96","severity":1,"message":"123","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"101","replacedBy":"124"},{"ruleId":"103","replacedBy":"125"},{"ruleId":"96","severity":1,"message":"117","line":8,"column":26,"nodeType":"98","messageId":"99","endLine":8,"endColumn":32},{"ruleId":"96","severity":1,"message":"118","line":8,"column":33,"nodeType":"98","messageId":"99","endLine":8,"endColumn":39},{"ruleId":"96","severity":1,"message":"119","line":8,"column":40,"nodeType":"98","messageId":"99","endLine":8,"endColumn":45},{"ruleId":"96","severity":1,"message":"121","line":8,"column":51,"nodeType":"98","messageId":"99","endLine":8,"endColumn":59},{"ruleId":"96","severity":1,"message":"122","line":8,"column":61,"nodeType":"98","messageId":"99","endLine":8,"endColumn":71},{"ruleId":"111","severity":1,"message":"112","line":38,"column":23,"nodeType":"113","messageId":"114","endLine":38,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":38,"column":48,"nodeType":"113","messageId":"114","endLine":38,"endColumn":50},{"ruleId":"96","severity":1,"message":"126","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":13},{"ruleId":"96","severity":1,"message":"127","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"128","line":16,"column":9,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"129","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":18},{"ruleId":"96","severity":1,"message":"130","line":2,"column":20,"nodeType":"98","messageId":"99","endLine":2,"endColumn":29},"@typescript-eslint/no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'PropTypes' is defined but never used.","'Mosaic' is defined but never used.","'blockHttp' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useHistory' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'Card' is defined but never used.",["131"],["132"],"'axios' is defined but never used.","'user' is defined but never used.","'sha256File' is assigned a value but never used.","'Carousel' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]