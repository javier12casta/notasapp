[{"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\index.tsx":"1","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\Datos.tsx":"2","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\transfer.tsx":"3","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\Navbar.tsx":"4","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\register.tsx":"5","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\login.tsx":"6","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\SlidebarData.tsx":"7","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\App.tsx":"8","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\http-common.tsx":"9","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\services\\user.service.tsx":"10","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\reportWebVitals.ts":"11"},{"size":651,"mtime":1606586677059,"results":"12","hashOfConfig":"13"},{"size":4643,"mtime":1606608613796,"results":"14","hashOfConfig":"13"},{"size":1950,"mtime":1606587176115,"results":"15","hashOfConfig":"13"},{"size":2379,"mtime":1606611832534,"results":"16","hashOfConfig":"13"},{"size":4172,"mtime":1606667408585,"results":"17","hashOfConfig":"13"},{"size":3596,"mtime":1606662942442,"results":"18","hashOfConfig":"13"},{"size":1133,"mtime":1606610733371,"results":"19","hashOfConfig":"13"},{"size":800,"mtime":1606608657416,"results":"20","hashOfConfig":"13"},{"size":165,"mtime":1606659857730,"results":"21","hashOfConfig":"13"},{"size":611,"mtime":1606663182383,"results":"22","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"4haubk",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\index.tsx",["50","51"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\Datos.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\transfer.tsx",["54","55","56","57"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\Navbar.tsx",["58"],"import React, { useState } from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from '../components/SlidebarData';\r\nimport { SidebarData1 } from '../components/SlidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\nimport { LocationDescriptorObject, Location, History } from 'history';\r\n\r\n\r\n/* export interface SidebarData2 {\r\n  title: string;\r\n  path: string;\r\n  icon: JSX.Element;\r\n  cName: string;\r\n} */\r\n\r\nfunction Navbar(this: any) {\r\n  const sesion = false;\r\n  let SidebarData2: { cName: string | undefined; path: string | LocationDescriptorObject<unknown> | ((location: Location<unknown>) => History.LocationDescriptor<unknown>); icon: React.ReactNode; title: React.ReactNode; }[] = [];\r\n  const [sidebar, setSidebar] = useState(false);\r\n  \r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  if(sesion == false){\r\n    SidebarData2 = SidebarData1;\r\n\r\n  }else{\r\n    this.SidebarData2 = SidebarData;\r\n  }\r\n   \r\n  \r\n  \r\n    return (\r\n      <>\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n          <div className='navbar'>\r\n            <Link to='#' className='menu-bars'>\r\n              <FaIcons.FaBars onClick={showSidebar} />\r\n            </Link>\r\n          </div>\r\n          <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n            <ul className='nav-menu-items' onClick={showSidebar}>\r\n              <li className='navbar-toggle'>\r\n                <Link to='#' className='menu-bars'>\r\n                  <AiIcons.AiOutlineClose />\r\n                </Link>\r\n              </li>\r\n              {SidebarData2.map((item: { cName: string | undefined; path: string | LocationDescriptorObject<unknown> | ((location: Location<unknown>) => History.LocationDescriptor<unknown>); icon: React.ReactNode; title: React.ReactNode; }, index: string | number | null | undefined) => {\r\n                return (\r\n                  <li key={index} className={item.cName}>\r\n                    <Link to={item.path}>\r\n                      {item.icon}\r\n                      <span>{item.title}</span>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </nav>\r\n        </IconContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Navbar;\r\n","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\register.tsx",["59","60","61","62","63","64","65","66","67"],"import React, { useState, } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//paginas import App from './../App';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {BrowserRouter as Router,Switch,Route,Link,Redirect, withRouter} from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport default function register() {\r\n\r\n\r\n    return (\r\n       <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                    <div className=\"card my-5\">                    \r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title text-center\">Registrar</h5>\r\n                               <Form>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Nombres</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Apellidos</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Correo</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"email\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Contraseña</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"password\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Dirección</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group>                              \r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Pais</Form.Label>\r\n                                    <Form.Control\r\n                                        size=\"lg\"\r\n                                        autoFocus\r\n                                        type=\"text\"\r\n                                       \r\n                                    />\r\n                                </Form.Group> \r\n                        \r\n                                <Button variant=\"success\" block size=\"lg\" type=\"submit\">\r\n                                    Registrar                                                                                              \r\n                                </Button>\r\n                                \r\n                            </Form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\pages\\login.tsx",["68","69","70","71","72"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\components\\SlidebarData.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\App.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\http-common.tsx",[],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\services\\user.service.tsx",["73"],"C:\\Users\\javie\\Documents\\GitHub\\notasapp\\src\\reportWebVitals.ts",[],{"ruleId":"74","severity":1,"message":"75","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":9},{"ruleId":"74","severity":1,"message":"78","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"74","severity":1,"message":"83","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"74","severity":1,"message":"84","line":4,"column":38,"nodeType":"76","messageId":"77","endLine":4,"endColumn":44},{"ruleId":"74","severity":1,"message":"85","line":14,"column":15,"nodeType":"76","messageId":"77","endLine":14,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":47,"column":49,"nodeType":"88","endLine":47,"endColumn":52},{"ruleId":"89","severity":1,"message":"90","line":25,"column":13,"nodeType":"91","messageId":"92","endLine":25,"endColumn":15},{"ruleId":"74","severity":1,"message":"93","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"94","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":20},{"ruleId":"74","severity":1,"message":"95","line":7,"column":26,"nodeType":"76","messageId":"77","endLine":7,"endColumn":32},{"ruleId":"74","severity":1,"message":"96","line":7,"column":33,"nodeType":"76","messageId":"77","endLine":7,"endColumn":39},{"ruleId":"74","severity":1,"message":"97","line":7,"column":40,"nodeType":"76","messageId":"77","endLine":7,"endColumn":45},{"ruleId":"74","severity":1,"message":"98","line":7,"column":46,"nodeType":"76","messageId":"77","endLine":7,"endColumn":50},{"ruleId":"74","severity":1,"message":"99","line":7,"column":51,"nodeType":"76","messageId":"77","endLine":7,"endColumn":59},{"ruleId":"74","severity":1,"message":"100","line":7,"column":61,"nodeType":"76","messageId":"77","endLine":7,"endColumn":71},{"ruleId":"74","severity":1,"message":"101","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":14},{"ruleId":"74","severity":1,"message":"95","line":8,"column":26,"nodeType":"76","messageId":"77","endLine":8,"endColumn":32},{"ruleId":"74","severity":1,"message":"96","line":8,"column":33,"nodeType":"76","messageId":"77","endLine":8,"endColumn":39},{"ruleId":"74","severity":1,"message":"97","line":8,"column":40,"nodeType":"76","messageId":"77","endLine":8,"endColumn":45},{"ruleId":"74","severity":1,"message":"99","line":8,"column":51,"nodeType":"76","messageId":"77","endLine":8,"endColumn":59},{"ruleId":"74","severity":1,"message":"100","line":8,"column":61,"nodeType":"76","messageId":"77","endLine":8,"endColumn":71},{"ruleId":"74","severity":1,"message":"102","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":12},"@typescript-eslint/no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'PropTypes' is defined but never used.","'Mosaic' is defined but never used.","'blockHttp' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useHistory' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'Card' is defined but never used.","'user' is defined but never used.","no-global-assign","no-unsafe-negation"]